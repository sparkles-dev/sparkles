version: 2
jobs:

  # Backend (Java, Gradle)
  build_backend:
    working_directory: ~/workspace
    docker:
      - image: gradle:4.10.3-jdk8
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          key: sparkles-gradle-002-{{ checksum "build.gradle" }}-{{ checksum "settings.gradle" }}
      - run:
         command: ./gradlew dependencies
         name: Pull Dependencies for Build Caching
      - run:
          command: ./gradlew test || ./gradlew test --info --scan
          name: Tests
      - run:
          command: ./gradlew apps:javalin:entity:docker apps:javalin:replication:docker
          name: Build Docker Images
      - save_cache:
          key: sparkles-gradle-002-{{ checksum "build.gradle" }}-{{ checksum "settings.gradle" }}
          paths:
          - ~/.gradle/caches
          - ~/workspace/.gradle
      - run:
          name: Collect Test Results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results

  # Frontend (Angular)
  build_frontend:
    docker:
    - image: angular/ngcontainer:latest
    working_directory: ~/workspace
    steps:
      - checkout
      - restore_cache:
          key: sparkles-frontend-002-{{ checksum "yarn.lock" }}
      - run: yarn install --frozen-lockfile --ignore-engines
      - save_cache:
          key: sparkles-frontend-002-{{ checksum "yarn.lock" }}
          paths:
          - ~/workspace/node_modules
      - run:
          command: ./scripts/ci/version-info.sh
          name: Print Version Info
      - run:
          command: ./scripts/ci/frontend.build.sh
          name: Build
      - run:
          command: ./scripts/ci/frontend.test.sh
          name: Test
      - run:
          command: ./scripts/ci/frontend.lint.sh
          name: Lint
      - store_artifacts:
          path: ~/workspace/dist
      - store_artifacts:
          path: ~/workspace/packages/components/dist
      - store_artifacts:
          path: ~/workspace/packages/styles/dist
      - store_test_results:
          path: ~/workspace/coverage

  # Project Linting
  lint:
    docker:
    - image: angular/ngcontainer:latest
    working_directory: ~/workspace
    steps:
      - checkout
      - restore_cache:
          key: sparkles-frontend-002-{{ checksum "yarn.lock" }}
      - run: yarn install --frozen-lockfile --ignore-engines
      - save_cache:
          key: sparkles-frontend-002-{{ checksum "yarn.lock" }}
          paths:
          - ~/workspace/node_modules
      - run:
          command: ./scripts/ci/commitlint.sh
          name: Lint Commit Messages

  # GitHub Pages Deployment
  deploy:
    docker:
    - image: angular/ngcontainer:latest
    working_directory: ~/workspace
    steps:
      # Deploy from CircleCI to GitHub Pages
      # https://circleci.com/blog/deploying-documentation-to-github-pages-with-continuous-integration/
      - add_ssh_keys:
          fingerprints:
            - "b2:e5:18:b6:61:2f:b0:cf:da:75:d1:19:6f:5c:0f:ba"
      - run:
          name: Add SSH Host Key for github.com
          command: |
            # https://github.com/openmicroscopy/devspace/issues/38#issuecomment-211515244
            ssh-keyscan github.com >> ~/.ssh/known_hosts

workflows:
  version: 2
  build:
    jobs:
    - build_backend
    - build_frontend
    - lint
